--- src/Terraria/Terraria.Localization/LanguageManager.cs
+++ src/tModLoader/Terraria.Localization/LanguageManager.cs
@@ -8,6 +_,7 @@
 using System.Reflection;
 using System.Text.RegularExpressions;
 using System.Threading;
+using Terraria.ModLoader;
 using Terraria.Utilities;
 
 namespace Terraria.Localization
@@ -15,7 +_,7 @@
 	public class LanguageManager
 	{
 		public static LanguageManager Instance = new LanguageManager();
-		private Dictionary<string, LocalizedText> _localizedTexts = new Dictionary<string, LocalizedText>();
+		internal Dictionary<string, LocalizedText> _localizedTexts = new Dictionary<string, LocalizedText>();
 		private Dictionary<string, List<string>> _categoryGroupedKeys = new Dictionary<string, List<string>>();
 		private GameCulture _fallbackCulture = GameCulture.English;
 
@@ -67,6 +_,9 @@
 				}
 
 				LoadLanguage(culture);
+				if (ActiveCulture != null)
+					ModContent.RefreshModLanguage(culture);
+
 				ActiveCulture = culture;
 				Thread.CurrentThread.CurrentCulture = culture.CultureInfo;
 				Thread.CurrentThread.CurrentUICulture = culture.CultureInfo;
@@ -111,10 +_,13 @@
 			}
 		}
 
-		private void ProcessCopyCommandsInTexts() {
+		internal void ProcessCopyCommandsInTexts() {
-			Regex regex = new Regex("{\\$(\\w+\\.\\w+)}", RegexOptions.Compiled);
+			Regex regex = new Regex(@"{\$([\w\.]+)}", RegexOptions.Compiled);
 			foreach (KeyValuePair<string, LocalizedText> localizedText in _localizedTexts) {
 				LocalizedText value = localizedText.Value;
+				if (value.Value == null)
+					continue;
+
 				for (int i = 0; i < 100; i++) {
 					string text = regex.Replace(value.Value, (Match match) => GetTextValue(match.Groups[1].ToString()));
 					if (text == value.Value)
