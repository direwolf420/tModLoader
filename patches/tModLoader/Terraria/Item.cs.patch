--- src/Terraria/Terraria/Item.cs
+++ src/tModLoader/Terraria/Item.cs
@@ -1,16 +_,35 @@
 using Microsoft.Xna.Framework;
 using System;
+using System.Linq;
 using Terraria.Audio;
 using Terraria.GameContent.Events;
 using Terraria.Graphics.Shaders;
 using Terraria.ID;
 using Terraria.UI;
 using Terraria.Utilities;
+using Terraria.ModLoader;
 
 namespace Terraria
 {
-	public class Item : Entity
+	public partial class Item : Entity
 	{
+		public ModItem modItem {
+			get;
+			internal set;
+		}
+
+		internal GlobalItem[] globalItems = new GlobalItem[0];
+
+		/// <summary>Gets the global item. Use this overload when you dynamically add GlobalItems manually.</summary>
+		public GlobalItem GetGlobalItem(Mod mod, string name) => ItemLoader.GetGlobalItem(this, mod, name).Instance(this);
+
+		/// <summary>Gets the global item. Use this overload when you know only 1 instance will ever be added by this particular mod.</summary>
+		[Obsolete("Use GetGlobalItem<T>() instead", true)]
+		public T GetGlobalItem<T>(Mod mod) where T : GlobalItem => (T)GetGlobalItem(mod, typeof(T).Name);
+
+		/// <summary>Gets the global item. Use this overload when you know only 1 instance will ever be added among all mods. 99% of mods should use this.</summary>
+		public T GetGlobalItem<T>() where T : GlobalItem => (T)ModContent.GetInstance<T>().Instance(this);
+
 		private string _nameOverride;
 		public const int flaskTime = 72000;
 		public const int copper = 1;
@@ -190,6 +_,10 @@
 				return false;
 
 			UnifiedRandom unifiedRandom = WorldGen.gen ? WorldGen.genRand : Main.rand;
+			bool? applyPrefixOverride = ItemLoader.PrefixChance(this, pre, unifiedRandom);
+			if (!applyPrefixOverride ?? false)
+				return false;
+
 			int num = pre;
 			float num2 = 1f;
 			float num3 = 1f;
@@ -208,15 +_,20 @@
 				num7 = 1f;
 				num8 = 0;
 				flag = false;
-				if (num == -1 && unifiedRandom.Next(4) == 0)
+				if (pre == -1 && !(applyPrefixOverride ?? false) && unifiedRandom.NextBool(4))
 					num = 0;
 
 				if (pre < -1)
 					num = -1;
 
 				if (num == -1 || num == -2 || num == -3) {
+					int modPrefix = ItemLoader.ChoosePrefix(this, unifiedRandom);
+					if (modPrefix >= 0) {
+						num = modPrefix;
+					}
-					if (type == 1 || type == 4 || type == 6 || type == 7 || type == 10 || type == 24 || type == 45 || type == 46 || type == 65 || type == 103 || type == 104 || type == 121 || type == 122 || type == 155 || type == 190 || type == 196 || type == 198 || type == 199 || type == 200 || type == 201 || type == 202 || type == 203 || type == 204 || type == 213 || type == 217 || type == 273 || type == 367 || type == 368 || type == 426 || type == 482 || type == 483 || type == 484 || type == 653 || type == 654 || type == 656 || type == 657 || type == 659 || type == 660 || type == 671 || type == 672 || type == 674 || type == 675 || type == 676 || type == 723 || type == 724 || type == 757 || type == 776 || type == 777 || type == 778 || type == 787 || type == 795 || type == 797 || type == 798 || type == 799 || type == 881 || type == 882 || type == 921 || type == 922 || type == 989 || type == 990 || type == 991 || type == 992 || type == 993 || type == 1123 || type == 1166 || type == 1185 || type == 1188 || type == 1192 || type == 1195 || type == 1199 || type == 1202 || type == 1222 || type == 1223 || type == 1224 || type == 1226 || type == 1227 || type == 1230 || type == 1233 || type == 1234 || type == 1294 || type == 1304 || type == 1305 || type == 1306 || type == 1320 || type == 1327 || type == 1506 || type == 1507 || type == 1786 || type == 1826 || type == 1827 || type == 1909 || type == 1917 || type == 1928 || type == 2176 || type == 2273 || type == 2608 || type == 2341 || type == 2330 || type == 2320 || type == 2516 || type == 2517 || type == 2746 || type == 2745 || type == 3063 || type == 3018 || type == 3211 || type == 3013 || type == 3258 || type == 3106 || type == 3065 || type == 2880 || type == 3481 || type == 3482 || type == 3483 || type == 3484 || type == 3485 || type == 3487 || type == 3488 || type == 3489 || type == 3490 || type == 3491 || type == 3493 || type == 3494 || type == 3495 || type == 3496 || type == 3497 || type == 3498 || type == 3500 || type == 3501 || type == 3502 || type == 3503 || type == 3504 || type == 3505 || type == 3506 || type == 3507 || type == 3508 || type == 3509 || type == 3511 || type == 3512 || type == 3513 || type == 3514 || type == 3515 || type == 3517 || type == 3518 || type == 3519 || type == 3520 || type == 3521 || type == 3522 || type == 3523 || type == 3524 || type == 3525 || (type >= 3462 && type <= 3466) || (type >= 2772 && type <= 2786) || type == 3349 || type == 3352 || type == 3351 || (type >= 3764 && type <= 3769) || type == 3772 || type == 3823 || type == 3827) {
+					else if (type == 1 || type == 4 || type == 6 || type == 7 || type == 10 || type == 24 || type == 45 || type == 46 || type == 65 || type == 103 || type == 104 || type == 121 || type == 122 || type == 155 || type == 190 || type == 196 || type == 198 || type == 199 || type == 200 || type == 201 || type == 202 || type == 203 || type == 204 || type == 213 || type == 217 || type == 273 || type == 367 || type == 368 || type == 426 || type == 482 || type == 483 || type == 484 || type == 653 || type == 654 || type == 656 || type == 657 || type == 659 || type == 660 || type == 671 || type == 672 || type == 674 || type == 675 || type == 676 || type == 723 || type == 724 || type == 757 || type == 776 || type == 777 || type == 778 || type == 787 || type == 795 || type == 797 || type == 798 || type == 799 || type == 881 || type == 882 || type == 921 || type == 922 || type == 989 || type == 990 || type == 991 || type == 992 || type == 993 || type == 1123 || type == 1166 || type == 1185 || type == 1188 || type == 1192 || type == 1195 || type == 1199 || type == 1202 || type == 1222 || type == 1223 || type == 1224 || type == 1226 || type == 1227 || type == 1230 || type == 1233 || type == 1234 || type == 1294 || type == 1304 || type == 1305 || type == 1306 || type == 1320 || type == 1327 || type == 1506 || type == 1507 || type == 1786 || type == 1826 || type == 1827 || type == 1909 || type == 1917 || type == 1928 || type == 2176 || type == 2273 || type == 2608 || type == 2341 || type == 2330 || type == 2320 || type == 2516 || type == 2517 || type == 2746 || type == 2745 || type == 3063 || type == 3018 || type == 3211 || type == 3013 || type == 3258 || type == 3106 || type == 3065 || type == 2880 || type == 3481 || type == 3482 || type == 3483 || type == 3484 || type == 3485 || type == 3487 || type == 3488 || type == 3489 || type == 3490 || type == 3491 || type == 3493 || type == 3494 || type == 3495 || type == 3496 || type == 3497 || type == 3498 || type == 3500 || type == 3501 || type == 3502 || type == 3503 || type == 3504 || type == 3505 || type == 3506 || type == 3507 || type == 3508 || type == 3509 || type == 3511 || type == 3512 || type == 3513 || type == 3514 || type == 3515 || type == 3517 || type == 3518 || type == 3519 || type == 3520 || type == 3521 || type == 3522 || type == 3523 || type == 3524 || type == 3525 || type >= 3462 && type <= 3466 || type >= 2772 && type <= 2786 || type == 3349 || type == 3352 || type == 3351 || type >= 3764 && type <= 3769 || type == 3772 || type == 3823 || type == 3827 || ItemLoader.MeleePrefix(this)) {
+						const int numVanilla = 40;
-						int num9 = unifiedRandom.Next(40);
+						int num9 = unifiedRandom.Next(numVanilla);
 						if (num9 == 0)
 							num = 1;
 
@@ -336,9 +_,12 @@
 
 						if (num9 == 39)
 							num = 81;
+
+						ModPrefix.Roll(this, ref num, numVanilla, PrefixCategory.AnyWeapon, PrefixCategory.Melee);
 					}
-					else if (type == 162 || type == 160 || type == 163 || type == 220 || type == 274 || type == 277 || type == 280 || type == 383 || type == 384 || type == 385 || type == 386 || type == 387 || type == 388 || type == 389 || type == 390 || type == 406 || type == 537 || type == 550 || type == 579 || type == 756 || type == 759 || type == 801 || type == 802 || type == 1186 || type == 1189 || type == 1190 || type == 1193 || type == 1196 || type == 1197 || type == 1200 || type == 1203 || type == 1204 || type == 1228 || type == 1231 || type == 1232 || type == 1259 || type == 1262 || type == 1297 || type == 1314 || type == 1325 || type == 1947 || type == 2332 || type == 2331 || type == 2342 || type == 2424 || type == 2611 || type == 2798 || type == 3012 || type == 3473 || type == 3098 || type == 3368 || type == 3835 || type == 3836 || type == 3858) {
+					else if (type == 162 || type == 160 || type == 163 || type == 220 || type == 274 || type == 277 || type == 280 || type == 383 || type == 384 || type == 385 || type == 386 || type == 387 || type == 388 || type == 389 || type == 390 || type == 406 || type == 537 || type == 550 || type == 579 || type == 756 || type == 759 || type == 801 || type == 802 || type == 1186 || type == 1189 || type == 1190 || type == 1193 || type == 1196 || type == 1197 || type == 1200 || type == 1203 || type == 1204 || type == 1228 || type == 1231 || type == 1232 || type == 1259 || type == 1262 || type == 1297 || type == 1314 || type == 1325 || type == 1947 || type == 2332 || type == 2331 || type == 2342 || type == 2424 || type == 2611 || type == 2798 || type == 3012 || type == 3473 || type == 3098 || type == 3368 || type == 3835 || type == 3836 || type == 3858 || ItemLoader.WeaponPrefix(this)) {
+						const int numVanilla = 14;
-						int num10 = unifiedRandom.Next(14);
+						int num10 = unifiedRandom.Next(numVanilla);
 						if (num10 == 0)
 							num = 36;
 
@@ -380,9 +_,12 @@
 
 						if (num10 == 13)
 							num = 61;
+
+						ModPrefix.Roll(this, ref num, numVanilla, PrefixCategory.AnyWeapon);
 					}
-					else if (type == 39 || type == 44 || type == 95 || type == 96 || type == 98 || type == 99 || type == 120 || type == 164 || type == 197 || type == 219 || type == 266 || type == 281 || type == 434 || type == 435 || type == 436 || type == 481 || type == 506 || type == 533 || type == 534 || type == 578 || type == 655 || type == 658 || type == 661 || type == 679 || type == 682 || type == 725 || type == 758 || type == 759 || type == 760 || type == 796 || type == 800 || type == 905 || type == 923 || type == 964 || type == 986 || type == 1156 || type == 1187 || type == 1194 || type == 1201 || type == 1229 || type == 1254 || type == 1255 || type == 1258 || type == 1265 || type == 1319 || type == 1553 || type == 1782 || type == 1784 || type == 1835 || type == 1870 || type == 1910 || type == 1929 || type == 1946 || type == 2223 || type == 2269 || type == 2270 || type == 2624 || type == 2515 || type == 2747 || type == 2796 || type == 2797 || type == 3052 || type == 2888 || type == 3019 || type == 3029 || type == 3007 || type == 3008 || type == 3210 || type == 3107 || type == 3245 || type == 3475 || type == 3540 || type == 3854 || type == 3859 || type == 3821 || type == 3480 || type == 3486 || type == 3492 || type == 3498 || type == 3504 || type == 3510 || type == 3516 || type == 3350 || type == 3546 || type == 3788) {
+					else if (type == 39 || type == 44 || type == 95 || type == 96 || type == 98 || type == 99 || type == 120 || type == 164 || type == 197 || type == 219 || type == 266 || type == 281 || type == 434 || type == 435 || type == 436 || type == 481 || type == 506 || type == 533 || type == 534 || type == 578 || type == 655 || type == 658 || type == 661 || type == 679 || type == 682 || type == 725 || type == 758 || type == 759 || type == 760 || type == 796 || type == 800 || type == 905 || type == 923 || type == 964 || type == 986 || type == 1156 || type == 1187 || type == 1194 || type == 1201 || type == 1229 || type == 1254 || type == 1255 || type == 1258 || type == 1265 || type == 1319 || type == 1553 || type == 1782 || type == 1784 || type == 1835 || type == 1870 || type == 1910 || type == 1929 || type == 1946 || type == 2223 || type == 2269 || type == 2270 || type == 2624 || type == 2515 || type == 2747 || type == 2796 || type == 2797 || type == 3052 || type == 2888 || type == 3019 || type == 3029 || type == 3007 || type == 3008 || type == 3210 || type == 3107 || type == 3245 || type == 3475 || type == 3540 || type == 3854 || type == 3859 || type == 3821 || type == 3480 || type == 3486 || type == 3492 || type == 3498 || type == 3504 || type == 3510 || type == 3516 || type == 3350 || type == 3546 || type == 3788 || ItemLoader.RangedPrefix(this)) {
+						const int numVanilla = 36;
-						int num11 = unifiedRandom.Next(36);
+						int num11 = unifiedRandom.Next(numVanilla);
 						if (num11 == 0)
 							num = 16;
 
@@ -490,9 +_,12 @@
 
 						if (num11 == 35)
 							num = 82;
+
+						ModPrefix.Roll(this, ref num, numVanilla, PrefixCategory.AnyWeapon, PrefixCategory.Ranged);
 					}
-					else if (type == 64 || type == 112 || type == 113 || type == 127 || type == 157 || type == 165 || type == 218 || type == 272 || type == 494 || type == 495 || type == 496 || type == 514 || type == 517 || type == 518 || type == 519 || type == 683 || type == 726 || type == 739 || type == 740 || type == 741 || type == 742 || type == 743 || type == 744 || type == 788 || type == 1121 || type == 1155 || type == 1157 || type == 1178 || type == 1244 || type == 1256 || type == 1260 || type == 1264 || type == 1266 || type == 1295 || type == 1296 || type == 1308 || type == 1309 || type == 1313 || type == 1336 || type == 1444 || type == 1445 || type == 1446 || type == 1572 || type == 1801 || type == 1802 || type == 1930 || type == 1931 || type == 2188 || type == 2622 || type == 2621 || type == 2584 || type == 2551 || type == 2366 || type == 2535 || type == 2365 || type == 2364 || type == 2623 || type == 2750 || type == 2795 || type == 3053 || type == 3051 || type == 3209 || type == 3014 || type == 3105 || type == 2882 || type == 3269 || type == 3006 || type == 3377 || type == 3069 || type == 2749 || type == 3249 || type == 3476 || type == 3474 || type == 3531 || type == 3541 || type == 3542 || type == 3569 || type == 3570 || type == 3571 || type == 3779 || type == 3787 || type == 3531 || type == 3852 || type == 3870 || type == 3824 || type == 3818 || type == 3829 || type == 3832 || type == 3825 || type == 3819 || type == 3830 || type == 3833 || type == 3826 || type == 3820 || type == 3831 || type == 3834) {
+					else if (type == 64 || type == 112 || type == 113 || type == 127 || type == 157 || type == 165 || type == 218 || type == 272 || type == 494 || type == 495 || type == 496 || type == 514 || type == 517 || type == 518 || type == 519 || type == 683 || type == 726 || type == 739 || type == 740 || type == 741 || type == 742 || type == 743 || type == 744 || type == 788 || type == 1121 || type == 1155 || type == 1157 || type == 1178 || type == 1244 || type == 1256 || type == 1260 || type == 1264 || type == 1266 || type == 1295 || type == 1296 || type == 1308 || type == 1309 || type == 1313 || type == 1336 || type == 1444 || type == 1445 || type == 1446 || type == 1572 || type == 1801 || type == 1802 || type == 1930 || type == 1931 || type == 2188 || type == 2622 || type == 2621 || type == 2584 || type == 2551 || type == 2366 || type == 2535 || type == 2365 || type == 2364 || type == 2623 || type == 2750 || type == 2795 || type == 3053 || type == 3051 || type == 3209 || type == 3014 || type == 3105 || type == 2882 || type == 3269 || type == 3006 || type == 3377 || type == 3069 || type == 2749 || type == 3249 || type == 3476 || type == 3474 || type == 3531 || type == 3541 || type == 3542 || type == 3569 || type == 3570 || type == 3571 || type == 3779 || type == 3787 || type == 3531 || type == 3852 || type == 3870 || type == 3824 || type == 3818 || type == 3829 || type == 3832 || type == 3825 || type == 3819 || type == 3830 || type == 3833 || type == 3826 || type == 3820 || type == 3831 || type == 3834 || ItemLoader.MagicPrefix(this)) {
+						const int numVanilla = 36;
-						int num12 = unifiedRandom.Next(36);
+						int num12 = unifiedRandom.Next(numVanilla);
 						if (num12 == 0)
 							num = 26;
 
@@ -600,9 +_,12 @@
 
 						if (num12 == 35)
 							num = 83;
+
+						ModPrefix.Roll(this, ref num, numVanilla, PrefixCategory.AnyWeapon, PrefixCategory.Magic);
 					}
-					else if (type == 55 || type == 119 || type == 191 || type == 284 || type == 670 || type == 1122 || type == 1513 || type == 1569 || type == 1571 || type == 1825 || type == 1918 || type == 3054 || type == 3262 || (type >= 3278 && type <= 3292) || (type >= 3315 && type <= 3317) || type == 3389 || type == 3030 || type == 3543) {
+					else if (type == 55 || type == 119 || type == 191 || type == 284 || type == 670 || type == 1122 || type == 1513 || type == 1569 || type == 1571 || type == 1825 || type == 1918 || type == 3054 || type == 3262 || type >= 3278 && type <= 3292 || type >= 3315 && type <= 3317 || type == 3389 || type == 3030 || type == 3543 || ItemLoader.WeaponPrefix(this)) {
+						const int numVanilla = 14;
-						int num13 = unifiedRandom.Next(14);
+						int num13 = unifiedRandom.Next(numVanilla);
 						if (num13 == 0)
 							num = 36;
 
@@ -644,12 +_,15 @@
 
 						if (num13 == 13)
 							num = 61;
+
+						ModPrefix.Roll(this, ref num, numVanilla, PrefixCategory.AnyWeapon);
 					}
 					else {
 						if (!accessory || type == 267 || type == 562 || type == 563 || type == 564 || type == 565 || type == 566 || type == 567 || type == 568 || type == 569 || type == 570 || type == 571 || type == 572 || type == 573 || type == 574 || type == 576 || type == 1307 || (type >= 1596 && type < 1610) || vanity)
 							return false;
 
 						num = unifiedRandom.Next(62, 81);
+						ModPrefix.Roll(this, ref num, 81 - 62, PrefixCategory.Accessory);
 					}
 				}
 
@@ -657,7 +_,7 @@
 					case -3:
 						return true;
 					case -1:
-						if ((num == 7 || num == 8 || num == 9 || num == 10 || num == 11 || num == 22 || num == 23 || num == 24 || num == 29 || num == 30 || num == 31 || num == 39 || num == 40 || num == 56 || num == 41 || num == 47 || num == 48 || num == 49) && unifiedRandom.Next(3) != 0)
+						if ((num == 7 || num == 8 || num == 9 || num == 10 || num == 11 || num == 22 || num == 23 || num == 24 || num == 29 || num == 30 || num == 31 || num == 39 || num == 40 || num == 56 || num == 41 || num == 47 || num == 48 || num == 49) && !(applyPrefixOverride ?? false) && !unifiedRandom.NextBool(3))
 							num = 0;
 						break;
 				}
@@ -931,6 +_,9 @@
 						num8 = 2;
 						break;
 				}
+				if (num >= PrefixID.Count) {
+					ModPrefix.GetPrefix((byte)num)?.SetStats(ref num2, ref num3, ref num4, ref num5, ref num6, ref num7, ref num8);
+				}
 
 				if (num2 != 1f && Math.Round((float)damage * num2) == (double)damage) {
 					flag = true;
@@ -952,10 +_,16 @@
 					num = -1;
 				}
 
+				if (num >= PrefixID.Count)
+					ModPrefix.GetPrefix((byte)num)?.ValidateItem(this, ref flag);
+
 				if (pre == -2 && num == 0) {
 					num = -1;
 					flag = true;
 				}
+
+				if (!flag && !ItemLoader.AllowPrefix(this, num))
+					flag = true;
 			}
 
 			damage = (int)Math.Round((float)damage * num2);
@@ -967,6 +_,9 @@
 			scale *= num5;
 			shootSpeed *= num6;
 			crit += num8;
+			if (num >= PrefixID.Count)
+				ModPrefix.GetPrefix((byte)num)?.Apply(this);
+
 			float num14 = 1f * num2 * (2f - num4) * (2f - num7) * num5 * num3 * num6 * (1f + (float)crit * 0.02f);
 			if (num == 62 || num == 69 || num == 73 || num == 77)
 				num14 *= 1.05f;
@@ -980,6 +_,9 @@
 			if (num == 65 || num == 72 || num == 76 || num == 80 || num == 68)
 				num14 *= 1.2f;
 
+			if (num >= PrefixID.Count)
+				ModPrefix.GetPrefix((byte)num)?.ModifyValue(ref num14);
+
 			if ((double)num14 >= 1.2)
 				rare += 2;
 			else if ((double)num14 >= 1.05)
@@ -1024,6 +_,8 @@
 		public Rectangle getRect() => new Rectangle((int)position.X, (int)position.Y, width, height);
 
 		public bool checkMat() {
+			material = ItemID.Sets.IsAMaterial[type];
+			return ItemID.Sets.IsAMaterial[type]; // bypass performance issue.
 			if (type >= 71 && type <= 74) {
 				material = false;
 				return false;
@@ -1038,6 +_,13 @@
 				}
 			}
 
+			foreach (RecipeGroup recipeGroup in RecipeGroup.recipeGroups.Values) {
+				if (recipeGroup.ContainsItem(type)) {
+					material = true;
+					return true;
+				}
+			}
+
 			switch (type) {
 				case 529:
 				case 541:
@@ -1209,6 +_,9 @@
 		}
 
 		public static int BannerToItem(int banner) {
+			if (NPCLoader.bannerToItem.ContainsKey(banner))
+				return NPCLoader.bannerToItem[banner];
+
 			int num = 0;
 			if (banner >= 257)
 				return 3837 + banner - 257;
@@ -1893,9 +_,10 @@
 					return 265;
 				case 578:
 					return 266;
-				default:
-					return 0;
 			}
+			if (i >= NPCID.Count) // in NPCtoBanner method
+				return NPCLoader.GetNPC(i).banner;
+			return 0;
 		}
 
 		public static int BannerToNPC(int i) {
@@ -2418,9 +_,10 @@
 					return 561;
 				case 266:
 					return 578;
-				default:
-					return 0;
 			}
+			if (i >= NPCID.Count) // in BannerToNPC method
+				return i;
+			return 0;
 		}
 
 		public void SetDefaults1(int type) {
@@ -37311,6 +_,16 @@
 			}
 		}
 
+		public void CloneDefaults(int TypeToClone) {
+			int originalType = type;
+			int originalNetID = netID;
+			ModItem originalModItem = modItem;
+			SetDefaults(TypeToClone);
+			type = originalType;
+			netID = originalNetID;
+			modItem = originalModItem;
+		}
+
 		public void SetDefaults(int Type = 0, bool noMatCheck = false) {
 			if (Main.netMode == 1 || Main.netMode == 2)
 				owner = 255;
@@ -37318,9 +_,6 @@
 				owner = Main.myPlayer;
 
 			ResetStats(Type);
-			if (type >= 3930)
-				type = 0;
-
 			if (type == 0) {
 				netID = 0;
 				stack = 0;
@@ -37477,11 +_,12 @@
 				maxStack = 999;
 
 			netID = type;
+			ItemLoader.SetDefaults(this);
 			if (!noMatCheck)
 				checkMat();
 
 			RebuildTooltip();
-			if (type > 0 && type < 3930 && ItemID.Sets.Deprecated[type]) {
+			if (type > 0 && ItemID.Sets.Deprecated[type]) {
 				netID = 0;
 				type = 0;
 				stack = 0;
@@ -37489,6 +_,8 @@
 		}
 
 		public void ResetStats(int Type) {
+			modItem = null;
+			globalItems = new GlobalItem[0];
 			sentry = false;
 			DD2Summon = false;
 			shopSpecialCurrency = -1;
@@ -37590,6 +_,10 @@
 		}
 
 		public Color GetAlpha(Color newColor) {
+			Color? modColor = ItemLoader.GetAlpha(this, newColor);
+			if (modColor.HasValue)
+				return modColor.Value;
+
 			switch (type) {
 				case 75:
 				case 3065:
@@ -37909,6 +_,7 @@
 						}
 					}
 
+					ItemLoader.Update(this, ref num, ref num2);
 					if (ItemID.Sets.ItemNoGravity[type]) {
 						base.velocity.X *= 0.95f;
 						if ((double)base.velocity.X < 0.1 && (double)base.velocity.X > -0.1)
@@ -37919,6 +_,7 @@
 							base.velocity.Y = 0f;
 					}
 					else {
+						//patch file: num, num2
 						base.velocity.Y += num;
 						if (base.velocity.Y > num2)
 							base.velocity.Y = num2;
@@ -38036,7 +_,7 @@
 								NetMessage.SendData(21, -1, -1, null, i);
 							}
 						}
-						else if (owner == Main.myPlayer && type != 312 && type != 318 && type != 173 && type != 174 && type != 175 && type != 2701 && rare == 0) {
+						else if (owner == Main.myPlayer && type != 312 && type != 318 && type != 173 && type != 174 && type != 175 && type != 2701 && rare == 0 || ItemLoader.CanBurnInLava(this)) {
 							active = false;
 							type = 0;
 							stack = 0;
@@ -38335,6 +_,7 @@
 					spawnTime++;
 				}
 
+				ItemLoader.PostUpdate(this);
 				if (Main.netMode == 2 && owner != Main.myPlayer) {
 					release++;
 					if (release >= 300) {
@@ -38365,6 +_,9 @@
 
 			int num = 400;
 			Main.item[400] = new Item();
+			if (NPCLoader.blockLoot.Contains(Type))
+				return num;
+
 			if (Main.halloween) {
 				if (Type == 58)
 					Type = 1734;
@@ -38461,14 +_,17 @@
 			owner = 255;
 			float num2 = 999999f;
 			for (int i = 0; i < 255; i++) {
-				if (ownIgnore != i && Main.player[i].active && Main.player[i].ItemSpace(Main.item[whoAmI])) {
+				if (ownIgnore != i && Main.player[i].active && ItemLoader.CanPickup(Main.item[whoAmI], Main.player[i]) && Main.player[i].ItemSpace(Main.item[whoAmI])) {
 					float num3 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - position.X - (float)(width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - position.Y - (float)height);
+					int grabRange = Player.defaultItemGrabRange;
 					if (Main.player[i].manaMagnet && (type == 184 || type == 1735 || type == 1868))
-						num3 -= (float)manaGrabRange;
+						grabRange += manaGrabRange;
 
 					if (Main.player[i].lifeMagnet && (type == 58 || type == 1734 || type == 1867))
-						num3 -= (float)lifeGrabRange;
+						grabRange += lifeGrabRange;
 
+					ItemLoader.GrabRange(Main.item[whoAmI], Main.player[i], ref grabRange);
+					num3 -= grabRange;
 					if (num3 < (float)NPC.sWidth && num3 < num2) {
 						num2 = num3;
 						owner = i;
@@ -38483,7 +_,22 @@
 			}
 		}
 
-		public Item Clone() => (Item)MemberwiseClone();
+		public Item Clone() {
+			Item newItem = (Item)MemberwiseClone();
+			newItem.modItem = modItem?.Clone(newItem);
+			newItem.globalItems = globalItems.Select(g => g.Clone(this, newItem)).ToArray();
+			return newItem;
+		}
+
+		// clones the item, but copies over the data from another data source
+		// specifically needed for reforging
+		public Item CloneWithModdedDataFrom(Item dataSource) {
+			Item newItem = (Item)MemberwiseClone();
+			newItem.modItem = dataSource.modItem?.Clone(newItem);
+			newItem.globalItems = dataSource.globalItems.Select(g => g.Clone(dataSource, newItem)).ToArray();
+			return newItem;
+		}
+
 		public Item DeepClone() => (Item)MemberwiseClone();
 
 		public bool IsTheSameAs(Item compareItem) {
@@ -38512,6 +_,8 @@
 			type = 0;
 			stack = 0;
 			netID = 0;
+			modItem = null;
+			globalItems = new GlobalItem[0];
 		}
 
 		public void OnPurchase(Item item) {
