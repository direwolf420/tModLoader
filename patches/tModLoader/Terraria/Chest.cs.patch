--- src/Terraria/Terraria/Chest.cs
+++ src/tModLoader/Terraria/Chest.cs
@@ -4,6 +_,7 @@
 using Terraria.GameContent.Events;
 using Terraria.ID;
 using Terraria.ObjectData;
+using Terraria.ModLoader;
 
 namespace Terraria
 {
@@ -159,6 +_,9 @@
 		public static bool isLocked(int x, int y) {
 			if (Main.tile[x, y] == null)
 				return true;
+				
+			if (Main.tile[x, y].type >= TileID.Count)
+				return TileLoader.IsLockedChest(x, y, Main.tile[x, y].type);
 
 			if ((Main.tile[x, y].frameX >= 72 && Main.tile[x, y].frameX <= 106) || (Main.tile[x, y].frameX >= 144 && Main.tile[x, y].frameX <= 178) || (Main.tile[x, y].frameX >= 828 && Main.tile[x, y].frameX <= 1006) || (Main.tile[x, y].frameX >= 1296 && Main.tile[x, y].frameX <= 1330) || (Main.tile[x, y].frameX >= 1368 && Main.tile[x, y].frameX <= 1402) || (Main.tile[x, y].frameX >= 1440 && Main.tile[x, y].frameX <= 1474))
 				return true;
@@ -228,6 +_,17 @@
 
 			short num;
 			int type;
+			if (Main.tile[X, Y].type >= TileID.Count) {
+				num = -36;
+				type = 11;
+				bool manual = false;
+				if(!TileLoader.UnlockChest(X, Y, Main.tile[X, Y].type, ref num, ref type, ref manual))
+					return false;
+				if (manual)
+					return true;
+				num *= -1;
+				goto PostVanillaChests;
+			}
 			switch (Main.tile[X, Y].frameX / 36) {
 				case 2:
 					num = 36;
@@ -258,6 +_,7 @@
 				default:
 					return false;
 			}
+			PostVanillaChests:
 
 			Main.PlaySound(22, X * 16, Y * 16);
 			for (int i = X; i <= X + 1; i++) {
@@ -348,15 +_,21 @@
 			}
 			else {
 				switch (type) {
-					case 21:
+					case TileID.Containers:
 						NetMessage.SendData(34, -1, -1, null, 0, x, y, style);
 						break;
-					case 467:
+					case TileID.Containers2:
 						NetMessage.SendData(34, -1, -1, null, 4, x, y, style);
 						break;
-					default:
+					case TileID.Dressers:
 						NetMessage.SendData(34, -1, -1, null, 2, x, y, style);
 						break;
+					case int _ when TileID.Sets.BasicChest[type]:
+						NetMessage.SendData(34, -1, -1, null, 100, x, y, style, 0, type, 0);
+						break;
+					case int _ when TileLoader.IsDresser(type):
+						NetMessage.SendData(34, -1, -1, null, 102, x, y, style, 0, type, 0);
+						break;
 				}
 			}
 
@@ -441,10 +_,10 @@
 			}
 		}
 
-		public void AddShop(Item newItem) {
+		public int AddShop(Item newItem) {
 			int num = 0;
 			while (true) {
-				if (num < 39) {
+				if (num < 38) { // tModLoader change: When selling to vendor with full inventory, replace 2nd to last item rather than have the item disappear to facilitate PostSellItem Item reference.
 					if (item[num] == null || item[num].type == 0)
 						break;
 
@@ -452,7 +_,7 @@
 					continue;
 				}
 
-				return;
+				break;
 			}
 
 			item[num] = newItem.Clone();
@@ -463,6 +_,8 @@
 				if (item[num].value < 1)
 					item[num].value = 1;
 			}
+
+			return num;
 		}
 
 		public static void SetupTravelShop() {
@@ -710,9 +_,12 @@
 							Main.travelShop[num2++] = 3636;
 							Main.travelShop[num2++] = 3641;
 							break;
+						//patch file: num2
 					}
 				}
 			}
+
+			NPCLoader.SetupTravelShop(Main.travelShop, ref num2);
 		}
 
 		public void SetupShop(int type) {
@@ -1908,6 +_,7 @@
 					}
 			}
 
+			NPCLoader.SetupShop(type, this, ref num);
 			if (Main.player[Main.myPlayer].discount) {
 				for (int num8 = 0; num8 < num; num8++) {
 					item[num8].value = (int)((float)item[num8].value * 0.8f);
