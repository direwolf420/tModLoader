--- src/Terraria/Terraria/TexturePackSupport.cs
+++ src/tModLoader/Terraria/TexturePackSupport.cs
@@ -4,6 +_,8 @@
 using System.Collections.Generic;
 using System.Diagnostics;
 using System.IO;
+using System.Linq;
+using Terraria.ModLoader;
 
 namespace Terraria
 {
@@ -11,14 +_,15 @@
 	{
 		public static bool Enabled = false;
 		public static int ReplacedTextures = 0;
-		private static ZipFile texturePack;
+		private static List<ZipFile> texturePacks = new List<ZipFile>();
 		private static Dictionary<string, ZipEntry> entries = new Dictionary<string, ZipEntry>();
 		private static Stopwatch test = new Stopwatch();
 
 		public static bool FetchTexture(string path, out Texture2D tex) {
-			if (entries.TryGetValue(path, out ZipEntry value)) {
+			if (entries.TryGetValue(path.Replace('\\', '/'), out ZipEntry value)) {
 				using (MemoryStream stream = new MemoryStream()) {
 					value.Extract(stream);
+					stream.Position = 0; // required for FNA
 					tex = FromStreamSlow(Main.instance.GraphicsDevice, stream);
 					ReplacedTextures++;
 					return true;
@@ -41,15 +_,42 @@
 			return texture2D;
 		}
 
+		/*
-		public static void FindTexturePack() {
+		public static void FindTexturePack()
+		{
 			string path = Main.SavePath + "/Texture Pack.zip";
 			if (!File.Exists(path))
+			{
 				return;
+			}
+			TexturePackSupport.entries.Clear();
+			TexturePackSupport.texturePack = ZipFile.Read(File.OpenRead(path));
+			foreach (ZipEntry current in TexturePackSupport.texturePack.Entries)
+			{
+				TexturePackSupport.entries.Add(current.FileName.Replace("/", "\\"), current);
+			}
+		}
+		*/
+
+		// TODO: Implement a Priority System (similar to Mods UI menu), save priority? For now, alphabetical, so later in alphabet actually takes priority. Or, we can ignore entries that already exist in dictionary to keep it A to Z
+		public static void FindTexturePacks() {
+			string texturePacksPath = Path.Combine(Main.SavePath, "TexturePacks");
+			if (Enabled)
+				Directory.CreateDirectory(texturePacksPath);
 
 			entries.Clear();
-			texturePack = ZipFile.Read(File.OpenRead(path));
-			foreach (ZipEntry entry in texturePack.Entries) {
-				entries.Add(entry.FileName.Replace("/", "\\"), entry);
+			texturePacks.Clear();
+			if (Directory.Exists(texturePacksPath)) {
+				List<string> files = Directory.GetFiles(texturePacksPath, "*.zip").ToList();
+				files.Sort();
+				foreach (string fileName in files) {
+					Logging.Terraria.Info("Loading Texture Pack: " + Path.GetFileName(fileName));
+					ZipFile zipFile = ZipFile.Read(File.OpenRead(fileName));
+					texturePacks.Add(zipFile);
+					foreach (ZipEntry current in zipFile.Entries) {
+						entries[current.FileName.Replace('\\', '/')] = current; // Switch add to accessor for multiple texture pack support
+					}
+				}
 			}
 		}
 	}
