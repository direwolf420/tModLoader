--- src/Terraria/Terraria.Map/MapHelper.cs
+++ src/tModLoader/Terraria.Map/MapHelper.cs
@@ -4,6 +_,8 @@
 using System.Diagnostics;
 using System.IO;
 using Terraria.IO;
+using Terraria.ModLoader;
+using Terraria.ModLoader.IO;
 using Terraria.Social;
 using Terraria.Utilities;
 
@@ -110,7 +_,8 @@
 		private static ushort dirtPosition;
 		private static ushort rockPosition;
 		private static ushort hellPosition;
+		internal static ushort modPosition;
-		private static Color[] colorLookup;
+		internal static Color[] colorLookup;
 		private static ushort[] snowTypes;
 		private static ushort wallRangeStart;
 		private static ushort wallRangeEnd;
@@ -1123,6 +_,7 @@
 
 			hellPosition = num11;
 			colorLookup[num11] = color7;
+			modPosition = (ushort)(num11 + 1);
 			snowTypes = new ushort[6];
 			snowTypes[0] = tileLookup[147];
 			snowTypes[1] = tileLookup[161];
@@ -1566,7 +_,9 @@
 				}
 			}
 
-			return MapTile.Create((ushort)(num3 + num4), (byte)num2, (byte)num);
+			ushort mapType = (ushort)(num3 + num4);
+			MapLoader.ModMapOption(ref mapType, i, j);
+			return MapTile.Create(mapType, (byte)num2, (byte)num);
 		}
 
 		public static void SaveMap() {
@@ -1679,7 +_,7 @@
 										byte b5 = 0;
 										int num7;
 										ushort num8;
-										if (mapTile.Light <= 18) {
+										if (mapTile.Light <= 18 || mapTile.Type >= modPosition) {
 											flag3 = false;
 											flag2 = false;
 											num7 = 0;
@@ -1823,9 +_,12 @@
 
 								deflateStream.Dispose();
 								FileUtilities.WriteAllBytes(text, memoryStream.ToArray(), isCloudSave);
+								//patch file: text
 							}
 						}
 					}
+
+					MapIO.WriteModFile(text, isCloudSave);
 				}
 				catch (Exception value) {
 					using (StreamWriter streamWriter = new StreamWriter("client-crashlog.txt", append: true)) {
